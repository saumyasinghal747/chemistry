{"version":3,"sources":["TopNav.tsx","calculators/chemistry/SpecificHeat.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TopNav","useState","collapseOpen","setCollapseOpen","dropdownOpen","setDropdownOpen","type","theme","expand","to","className","onClick","open","navbar","toggle","nav","caret","SpecificHeat","solid","fusion","liquid","vaporization","gas","heats","setHeats","setHeat","key","value","a","Object","assign","onChange","e","target","id","placeholder","JSON","stringify","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0055fca4.chunk.js","sourcesContent":["import React, { useState }  from 'react';\nimport {\n    Navbar, NavbarBrand,\n    NavbarToggler,\n    Nav,\n    NavItem,\n    NavLink,\n    Collapse,\n    Dropdown,\n    DropdownToggle,\n    DropdownItem,\n    DropdownMenu\n} from \"shards-react\";\nimport {\n    Link\n} from \"react-router-dom\";\nexport default function TopNav() {\n    const [collapseOpen, setCollapseOpen] = useState(false);\n    const toggleNavbar  =  ()=>{setCollapseOpen(!collapseOpen);}\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const toggleDropdown = ()=>{setDropdownOpen(!dropdownOpen);}\n    return (\n        <Navbar  type=\"dark\" theme=\"primary\" expand=\"md\">\n\n                <Link to=\"/\" className=\"navbar-brand\">Saumya's Chemistry Toolbox</Link>\n\n            <NavbarToggler onClick={toggleNavbar}/>\n            <Collapse open={collapseOpen} navbar>\n                <Nav navbar>\n                    <NavItem>\n                            <Link className=\"nav-link active\" to=\"/calculators/specific-heat\">\n                                Specific Heat\n                            </Link>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink to=\"/calculators/physics/range\">\n                            Projectile Range\n                        </NavLink>\n                    </NavItem>\n                    <Dropdown\n                        open={dropdownOpen}\n                        toggle={toggleDropdown}\n                    >\n                        <DropdownToggle nav caret>\n                            Dropdown\n                        </DropdownToggle>\n                        <DropdownMenu>\n                            <DropdownItem>Action</DropdownItem>\n                            <DropdownItem>Another action</DropdownItem>\n                            <DropdownItem>Something else here</DropdownItem>\n                        </DropdownMenu>\n                    </Dropdown>\n                </Nav>\n            </Collapse>\n        </Navbar>\n\n    )\n}","import React, { useState }  from 'react';\nimport { Form, FormInput, FormGroup, Card, CardBody } from \"shards-react\";\nexport default function SpecificHeat(){\n    const [heats, setHeats] = useState({\n        solid:0,\n        fusion:0,\n        liquid:0,\n        vaporization:0,\n        gas:0\n    })\n    const setHeat = (key:string,value:number)=>{\n        let a: { [index: string]:number } = {};\n        Object.assign(a,heats);\n        a[key] = value;\n        // @ts-ignore\n        setHeats(a);\n\n    }\n    return (\n        <div className=\"container pt-5\">\n            <h1>Energy Calculator</h1>\n            <hr/>\n<div>\n            <Card >\n                <CardBody  className=\"row\">\n                    <h3>Specific Heats</h3>\n                <div className=\"col mx-2\">\n            <Form>\n\n                <FormGroup>\n                    <label >Solid</label>\n                    <FormInput value={heats.solid} onChange={(e:any)=>setHeat('solid',e.target.value)} type=\"number\" id=\"#solid\" placeholder=\"Solid\" />\n                </FormGroup>\n                <FormGroup>\n                    <label >Liquid</label>\n                    <FormInput value={heats.liquid} onChange={(e:any)=>setHeat('liquid',e.target.value)} type=\"number\"  placeholder=\"Liquid\" />\n                </FormGroup>\n                <FormGroup>\n                    <label >Gas</label>\n                    <FormInput value={heats.gas} onChange={(e:any)=>setHeat('gas',e.target.value)} type=\"number\"  placeholder=\"Gas\" />\n                </FormGroup>\n            </Form>\n                </div>\n                <div className=\"col mx-2\">\n                        <Form>\n                            <FormGroup>\n                                <label >Fusion</label>\n                                <FormInput value={heats.fusion} onChange={(e:any)=>setHeat('fusion',e.target.value)} type=\"number\"  placeholder=\"Liquid\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <label>Vaporization</label>\n                                <FormInput  value={heats.vaporization} onChange={(e:any)=>setHeat('vaporization',e.target.value)} type=\"number\" placeholder=\"Vaporization\" />\n                            </FormGroup>\n                        </Form>\n                    </div>\n                </CardBody>\n                </Card>\n            </div>\n            {JSON.stringify(heats)}\n        </div>\n    )\n}","import React from 'react';\nimport TopNav from \"./TopNav\";\nimport {\n    //Navbar\n} from \"shards-react\";\nimport \"./css/utilities.css\"\nimport \"./css/grid.css\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\n\nimport {\n    HashRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport SpecificHeat from \"./calculators/chemistry/SpecificHeat\";\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <Router>\n              <TopNav></TopNav>\n          <Switch>\n              <Route path=\"/calculators/specific-heat\">\n                  <SpecificHeat/>\n              </Route>\n              <Route path=\"users\">\n                  {/*<About/>*/}\n              </Route>\n              <Route path=\"/\">\n                  {/*<About/>*/}\n              </Route>\n          </Switch>\n      </Router>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}